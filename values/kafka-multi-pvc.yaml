##################################################################################
# # StatefulSet 기반 앱에서 커스텀 PV/PVC를 직접 사전생성할 때 참고 사항
# - e.g.) pv의 로컬저장경로 변경이 필요한 경우 등

# # 단일노드 환경: Helm values.yaml의 persistence.existingClaim에서 사전배포된 커스텀 PVC명을 지정 후 차트 배포
# # 멀티노드 환경
# - 커스텀 PVC의 이름을 Helm차트가 자동생성하는 PVC명과 일치하도록 사전생성
#   e.g.) data-{ReleaseName}-kafka-controller-N 형식으로 지정한다. (미리 테스트 권장)
# - Kafka(StatefulSet)와 같이 여러 개의 독립된 PVC/PV가 요구되는 경우, existingClaim 섹션은 단일 PVC만 지정가능하므로 사용불가
# - `existingClaim=""(빈 값)`으로 비활성화하여, 동적프로비저닝(자동생성 방식)을 활성화
# - 차트 배포 시, 사전 생성된 커스텀 PVC가 자동 생성된 PVC처럼 인식됨

# # 참고
# - 대부분의 Helm 차트는 persistence.existingClaim을 통해 1개의 PVC만 지정할 수 있도록 지원한다.
# - 단, # Kafka(StatefulSet)와 같이 여러 개의 독립된 PVC,PV가 필요한 경우, existingClaim을 비활성화하고 persistence.enabled를 true로 설정하여 동적프로비저닝을 활성화한다.

# kubectl apply -f kafka-pvc.yaml -n kafka
# sudo chmod 777 /data  # 로컬호스트의 실제 경로에서 권한을 풀어줘야 함
##################################################################################

apiVersion: v1
kind: PersistentVolume
metadata:
  name: kafka-pv-0
  labels:
    name: kafka-pv-0    # PVC가 이 PV를 selector로 참조할 수 있도록 레이블 설정
spec:
  capacity:
    storage: 9Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/data"       # PV 데이터가 실제 저장되는 로컬호스트의 경로
  nodeAffinity:             # hostPath사용시, 특정 노드에 PV를 할당하기 위한 설정
    required:
      nodeSelectorTerms:
        - matchExpressions:
          - key: kubernetes.io/hostname
            operator: In
            values:
              - node-0      # 노드명(호스트명) 지정
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: data-wsl-kfk-kafka-controller-0    # data-{ReleaseName}-kafka-controller-N 
spec:
  accessModes:
    - ReadWriteOnce     # 사용할 pv 설정과 일치시켜 준다.
  resources:
    requests:
      storage: 9Gi      # 사용할 pv 설정과 일치시켜 준다.
  
  selector:
    matchLabels:
      name: kafka-pv-0  # pvc가 특정 pv를 참조하도록 설정

  storageClassName: ""
                        # 빈 문자열 => storageClass 미지정 (동적 프로비저닝 비활성화)
                        # 빈 값 or 섹션생략 => default storageClass 지정됨 (default provisioner에 의한 동적 프로비저닝 활성화)
---


apiVersion: v1
kind: PersistentVolume
metadata:
  name: kafka-pv-1
  labels:
    name: kafka-pv-1    
spec:
  capacity:
    storage: 9Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/data"
  nodeAffinity:         
    required:
      nodeSelectorTerms:
        - matchExpressions:
          - key: kubernetes.io/hostname
            operator: In
            values:
              - node-1
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: data-wsl-kfk-kafka-controller-1    # data-{ReleaseName}-kafka-controller-N 
spec:
  accessModes:
    - ReadWriteOnce     
  resources:
    requests:
      storage: 9Gi    
  selector:
    matchLabels:
      name: kafka-pv-1  
  storageClassName: ""
---


apiVersion: v1
kind: PersistentVolume
metadata:
  name: kafka-pv-2
  labels:
    name: kafka-pv-2    
spec:
  capacity:
    storage: 9Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/data"   
  nodeAffinity:         
    required:
      nodeSelectorTerms:
        - matchExpressions:
          - key: kubernetes.io/hostname
            operator: In
            values:
              - node-2   
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: data-wsl-kfk-kafka-controller-2    # data-{ReleaseName}-kafka-controller-N 
spec:
  accessModes:
    - ReadWriteOnce     
  resources:
    requests:
      storage: 9Gi    
  selector:
    matchLabels:
      name: kafka-pv-2 
  storageClassName: ""
