      # - pattern: java.lang<type=(.+), name=(.+)><(.+)>(\w+)
      #   name: jvm_$1_$4_$3_$2
      # - pattern: java.lang<type=(.+), name=(.+)><>(\w+)
      #   name: jvm_$1_$3_$2
      # - pattern : java.lang<type=(.*)>

apiVersion: v1
kind: ConfigMap
metadata:
  name: configmap-jmx-custom
data:
  jmx-kafka-prometheus.yml: |-
    jmxUrl: service:jmx:rmi:///jndi/rmi://127.0.0.1:5555/jmxrmi
    lowercaseOutputName: true
    lowercaseOutputLabelNames: true
    ssl: false
    whitelistObjectNames: ["kafka.controller:*","kafka.server:*","java.lang:*","kafka.network:*","kafka.log:*"]
    rules:
      - pattern: kafka.controller<type=(ControllerChannelManager), name=(QueueSize), broker-id=(\d+)><>(Value)
        name: kafka_controller_$1_$2_$4
        labels:
          broker_id: "$3"
      - pattern: kafka.controller<type=(ControllerChannelManager), name=(TotalQueueSize)><>(Value)
        name: kafka_controller_$1_$2_$3
      - pattern: kafka.controller<type=(KafkaController), name=(.+)><>(Value)
        name: kafka_controller_$1_$2_$3
      - pattern: kafka.controller<type=(ControllerStats), name=(.+)><>(Count)
        name: kafka_controller_$1_$2_$3
      - pattern : kafka.network<type=(Processor), name=(IdlePercent), networkProcessor=(.+)><>(Value)
        name: kafka_network_$1_$2_$4
        labels:
          network_processor: $3
      - pattern : kafka.network<type=(RequestMetrics), name=(.+), request=(.+)><>(Count|Value)
        name: kafka_network_$1_$2_$4
        labels:
          request: $3
      - pattern : kafka.network<type=(SocketServer), name=(.+)><>(Count|Value)
        name: kafka_network_$1_$2_$3
      - pattern : kafka.network<type=(RequestChannel), name=(.+)><>(Count|Value)
        name: kafka_network_$1_$2_$3
      - pattern: kafka.server<type=(.+), name=(.+), topic=(.+)><>(Count|OneMinuteRate)
        name: kafka_server_$1_$2_$4
        labels:
          topic: $3
      - pattern: kafka.server<type=(ReplicaFetcherManager), name=(.+), clientId=(.+)><>(Value)
        name: kafka_server_$1_$2_$4
        labels:
          client_id: "$3"
      - pattern: kafka.server<type=(DelayedOperationPurgatory), name=(.+), delayedOperation=(.+)><>(Value)
        name: kafka_server_$1_$2_$3_$4
      - pattern: kafka.server<type=(.+), name=(.+)><>(Count|Value|OneMinuteRate)
        name: kafka_server_$1_total_$2_$3
      - pattern: kafka.server<type=(.+)><>(queue-size)
        name: kafka_server_$1_$2
      - pattern: kafka.log<type=(.+), name=(.+), topic=(.+), partition=(.+)><>Value
        name: kafka_log_$1_$2
        labels:
          topic: $3
          partition: $4
      # --- Memory Usage (Heap and Non-Heap) ---
      - pattern: 'java.lang<type=Memory><>HeapMemoryUsage'
        name: jvm_memory_heap_bytes
        type: gauge
        attrNameSnakeCase: true
        # expose used, committed, init, max as labels
      - pattern: 'java.lang<type=Memory><>NonHeapMemoryUsage'
        name: jvm_memory_nonheap_bytes
        type: gauge
        attrNameSnakeCase: true

      # --- Memory Pools (per pool) ---
      - pattern: 'java.lang<type=MemoryPool,name=(.+)><>Usage'
        name: jvm_memory_pool_bytes
        type: gauge
        labels:
          pool: "$1"
        attrNameSnakeCase: true

      # --- Garbage Collector Metrics ---
      - pattern: 'java.lang<type=GarbageCollector,name=(.+)><>CollectionCount'
        name: jvm_gc_collection_seconds_count
        type: counter
        labels:
          gc: "$1"
      - pattern: 'java.lang<type=GarbageCollector,name=(.+)><>CollectionTime'
        name: jvm_gc_collection_seconds_sum
        type: counter
        labels:
          gc: "$1"

      # --- Thread Metrics ---
      - pattern: 'java.lang<type=Threading><>ThreadCount'
        name: jvm_threads_current
        type: gauge
      - pattern: 'java.lang<type=Threading><>PeakThreadCount'
        name: jvm_threads_peak
        type: gauge
      - pattern: 'java.lang<type=Threading><>DaemonThreadCount'
        name: jvm_threads_daemon
        type: gauge

      # --- Class Loading ---
      - pattern: 'java.lang<type=ClassLoading><>LoadedClassCount'
        name: jvm_classes_loaded
        type: gauge
      - pattern: 'java.lang<type=ClassLoading><>UnloadedClassCount'
        name: jvm_classes_unloaded_total
        type: counter

      # --- Operating System ---
      - pattern: 'java.lang<type=OperatingSystem><>ProcessCpuLoad'
        name: jvm_process_cpu_load
        type: gauge
      - pattern: 'java.lang<type=OperatingSystem><>SystemCpuLoad'
        name: jvm_system_cpu_load
        type: gauge
      - pattern: 'java.lang<type=OperatingSystem><>SystemLoadAverage'
        name: jvm_system_load_average
        type: gauge
      - pattern: 'java.lang<type=OperatingSystem><>OpenFileDescriptorCount'
        name: jvm_open_file_descriptor_count
        type: gauge
      - pattern: 'java.lang<type=OperatingSystem><>MaxFileDescriptorCount'
        name: jvm_max_file_descriptor_count
        type: gauge